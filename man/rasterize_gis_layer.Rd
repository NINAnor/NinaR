% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rasterize_gis_layer.R
\name{rasterize_gis_layer}
\alias{rasterize_gis_layer}
\title{rasterize_gis_layer Make a raster brick of ve}
\usage{
rasterize_gis_layer(
  gis_layer,
  id_column = NULL,
  feature_column = NULL,
  raster_template = NULL,
  resolution = 10
)
}
\arguments{
\item{gis_layer}{An sf layer to rasterize. Typically made by clip_gis_layer().}

\item{feature_column}{What column to use as values. Character values will be made into numerical values by as.numeric(as.factor())}

\item{raster_template}{Optional raster layer to use as template. Must be a of 'RasterLayer' class (from packages raster or fasterize)}

\item{resolution}{Set the spatial resolution of the raster if no raster template is provided. The origin of the raster will then be the left bottom origin of the border of the input vector layer.}

\item{id_layer}{Optional id column that identifies separate areas to rasterize, e.g. localities. If none is provided, the first column of the input layer will be used.}
}
\value{
A list of rasters for every value in id_layer (e.g. a list of rasters for each locality)
}
\description{
rasterize_gis_layer Make a raster brick of ve
}
\examples{
\dontrun{

#' small_sf <- tibble(locality = c("Semi-nat_99", "Semi-nat_100"), geom = c("POLYGON ((1082500 7775000, 1082500 7775500, 1083000 7775500, 1083000 7775000, 1082500 7775000))", "POLYGON ((1019000 7842500, 1019000 7843000, 1019500 7843000, 1019500 7842500, 1019000 7842500))")) |>
st_as_sf(wkt = "geom", crs = 25833)

small_sf_grunnkart <- clip_gis_layer(small_sf)

raster_grunnkart <- rasterize_gis_layer(small_sf_grunnkart,
  feature_column = "okosystemtype_1"
)
}

}
